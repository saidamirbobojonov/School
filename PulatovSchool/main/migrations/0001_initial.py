# Generated by Django 5.2.6 on 2025-09-13 14:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionDeadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('title', models.CharField(max_length=120)),
                ('title_tg', models.CharField(max_length=120, null=True)),
                ('title_ru', models.CharField(max_length=120, null=True)),
                ('title_en', models.CharField(max_length=120, null=True)),
                ('date_label', models.CharField(max_length=120)),
                ('date_label_tg', models.CharField(max_length=120, null=True)),
                ('date_label_ru', models.CharField(max_length=120, null=True)),
                ('date_label_en', models.CharField(max_length=120, null=True)),
            ],
            options={
                'verbose_name': 'Дедлайн приёма',
                'verbose_name_plural': 'Дедлайны приёма',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdmissionRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('text', models.CharField(max_length=255)),
                ('text_tg', models.CharField(max_length=255, null=True)),
                ('text_ru', models.CharField(max_length=255, null=True)),
                ('text_en', models.CharField(max_length=255, null=True)),
                ('group', models.CharField(blank=True, help_text='Опциональная группа требований', max_length=80)),
            ],
            options={
                'verbose_name': 'Требование поступления',
                'verbose_name_plural': 'Требования поступления',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdmissionStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=160)),
                ('title_tg', models.CharField(max_length=160, null=True)),
                ('title_ru', models.CharField(max_length=160, null=True)),
                ('title_en', models.CharField(max_length=160, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_tg', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('button_text', models.CharField(blank=True, max_length=80)),
                ('button_text_tg', models.CharField(blank=True, max_length=80, null=True)),
                ('button_text_ru', models.CharField(blank=True, max_length=80, null=True)),
                ('button_text_en', models.CharField(blank=True, max_length=80, null=True)),
                ('button_url', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'Шаг поступления',
                'verbose_name_plural': 'Шаги поступления',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('title_tg', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('category', models.CharField(choices=[('event', 'Событие'), ('olymp', 'Олимпиады'), ('club', 'Кружки'), ('other', 'Другое')], default='event', max_length=20)),
                ('start_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('badge', models.CharField(blank=True, max_length=60)),
                ('badge_tg', models.CharField(blank=True, max_length=60, null=True)),
                ('badge_ru', models.CharField(blank=True, max_length=60, null=True)),
                ('badge_en', models.CharField(blank=True, max_length=60, null=True)),
                ('body', models.TextField(blank=True)),
                ('body_tg', models.TextField(blank=True, null=True)),
                ('body_ru', models.TextField(blank=True, null=True)),
                ('body_en', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Анонс',
                'verbose_name_plural': 'Анонсы',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('title_tg', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Только английский', max_length=255, unique=True)),
                ('category', models.CharField(choices=[('license', 'Лицензия'), ('policy', 'Политика'), ('report', 'Отчёт'), ('other', 'Прочее')], default='license', max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='docs/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'xls', 'xlsx'])])),
                ('external_url', models.URLField(blank=True)),
                ('version', models.CharField(blank=True, max_length=40)),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('question', models.CharField(max_length=255)),
                ('question_tg', models.CharField(max_length=255, null=True)),
                ('question_ru', models.CharField(max_length=255, null=True)),
                ('question_en', models.CharField(max_length=255, null=True)),
                ('answer', models.TextField()),
                ('answer_tg', models.TextField(null=True)),
                ('answer_ru', models.TextField(null=True)),
                ('answer_en', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GalleryPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='gallery/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('caption_tg', models.CharField(blank=True, max_length=255, null=True)),
                ('caption_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('caption_en', models.CharField(blank=True, max_length=255, null=True)),
                ('aspect_ratio', models.CharField(choices=[('3:4', '3:4'), ('4:3', '4:3')], default='3:4', max_length=10)),
                ('column', models.PositiveSmallIntegerField(default=1, help_text='Для раскладки на стрим-колонки (1..3)')),
            ],
            options={
                'verbose_name': 'Фото галереи',
                'verbose_name_plural': 'Галерея',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('title_tg', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=255)),
                ('subtitle_tg', models.CharField(blank=True, max_length=255, null=True)),
                ('subtitle_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('subtitle_en', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_tg', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('bg_image', models.ImageField(blank=True, null=True, upload_to='hero/')),
                ('cta_primary_text', models.CharField(blank=True, max_length=120)),
                ('cta_primary_text_tg', models.CharField(blank=True, max_length=120, null=True)),
                ('cta_primary_text_ru', models.CharField(blank=True, max_length=120, null=True)),
                ('cta_primary_text_en', models.CharField(blank=True, max_length=120, null=True)),
                ('cta_primary_url', models.URLField(blank=True)),
                ('cta_secondary_text', models.CharField(blank=True, max_length=120)),
                ('cta_secondary_text_tg', models.CharField(blank=True, max_length=120, null=True)),
                ('cta_secondary_text_ru', models.CharField(blank=True, max_length=120, null=True)),
                ('cta_secondary_text_en', models.CharField(blank=True, max_length=120, null=True)),
                ('cta_secondary_url', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'Hero-блок',
                'verbose_name_plural': 'Hero-блоки',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfraSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('key', models.SlugField(help_text='Технический ключ: school, sport-zone, cafeteria, sport-gym, yard', max_length=64, unique=True)),
                ('title', models.CharField(max_length=160)),
                ('title_tg', models.CharField(max_length=160, null=True)),
                ('title_ru', models.CharField(max_length=160, null=True)),
                ('title_en', models.CharField(max_length=160, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_tg', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Пространство инфраструктуры',
                'verbose_name_plural': 'Инфраструктура: пространства',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPIStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('label', models.CharField(max_length=120)),
                ('label_tg', models.CharField(max_length=120, null=True)),
                ('label_ru', models.CharField(max_length=120, null=True)),
                ('label_en', models.CharField(max_length=120, null=True)),
                ('value', models.PositiveIntegerField(default=0)),
                ('year_start', models.PositiveIntegerField(blank=True, help_text='Если задан, возраст = текущий год - это значение.', null=True)),
                ('icon_svg', models.TextField(blank=True, help_text='Вставь <svg>…</svg> или пусто.')),
            ],
            options={
                'verbose_name': 'KPI показатель',
                'verbose_name_plural': 'KPI показатели',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('title_tg', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('excerpt', models.TextField(blank=True)),
                ('excerpt_tg', models.TextField(blank=True, null=True)),
                ('excerpt_ru', models.TextField(blank=True, null=True)),
                ('excerpt_en', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True)),
                ('body_tg', models.TextField(blank=True, null=True)),
                ('body_ru', models.TextField(blank=True, null=True)),
                ('body_en', models.TextField(blank=True, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='news/covers/')),
                ('category', models.CharField(choices=[('event', 'Событие'), ('project', 'Проект'), ('achievement', 'Достижение'), ('notice', 'Объявление')], default='event', max_length=20)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=160)),
                ('name_tg', models.CharField(max_length=160, null=True)),
                ('name_ru', models.CharField(max_length=160, null=True)),
                ('name_en', models.CharField(max_length=160, null=True)),
                ('role', models.CharField(blank=True, max_length=160)),
                ('role_tg', models.CharField(blank=True, max_length=160, null=True)),
                ('role_ru', models.CharField(blank=True, max_length=160, null=True)),
                ('role_en', models.CharField(blank=True, max_length=160, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='team/')),
                ('bio', models.TextField(blank=True)),
                ('bio_tg', models.TextField(blank=True, null=True)),
                ('bio_ru', models.TextField(blank=True, null=True)),
                ('bio_en', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Педагог',
                'verbose_name_plural': 'Педагоги',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimelineEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('year', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=160)),
                ('title_tg', models.CharField(max_length=160, null=True)),
                ('title_ru', models.CharField(max_length=160, null=True)),
                ('title_en', models.CharField(max_length=160, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_tg', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('icon_svg', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Событие хронологии',
                'verbose_name_plural': 'Хронология',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WhyUsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=160)),
                ('title_tg', models.CharField(max_length=160, null=True)),
                ('title_ru', models.CharField(max_length=160, null=True)),
                ('title_en', models.CharField(max_length=160, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_tg', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('icon_svg', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Преимущество',
                'verbose_name_plural': 'Преимущества',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfraPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('image', models.ImageField(upload_to='infra/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('caption_tg', models.CharField(blank=True, max_length=255, null=True)),
                ('caption_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('caption_en', models.CharField(blank=True, max_length=255, null=True)),
                ('aspect_ratio', models.CharField(choices=[('16:9', '16:9'), ('4:3', '4:3')], default='16:9', max_length=10)),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='main.infraspace')),
            ],
            options={
                'verbose_name': 'Фото инфраструктуры',
                'verbose_name_plural': 'Фото инфраструктуры',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfraBullet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('text', models.CharField(max_length=200)),
                ('text_tg', models.CharField(max_length=200, null=True)),
                ('text_ru', models.CharField(max_length=200, null=True)),
                ('text_en', models.CharField(max_length=200, null=True)),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bullets', to='main.infraspace')),
            ],
            options={
                'verbose_name': 'Пункт описания пространства',
                'verbose_name_plural': 'Пункты описания пространства',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(db_index=True, default=0)),
                ('image', models.ImageField(upload_to='news/gallery/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('aspect_ratio', models.CharField(choices=[('16:9', '16:9'), ('4:3', '4:3'), ('3:4', '3:4')], default='4:3', max_length=10)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='main.newspost')),
            ],
            options={
                'verbose_name': 'Фото новости',
                'verbose_name_plural': 'Галерея новостей',
                'ordering': ('position', 'id'),
                'abstract': False,
            },
        ),
    ]
